{"version":3,"sources":["shader/fragment.glsl","shader/vertex.glsl","util/Errors.ts","constants/interfaces.ts","core/WebGLClass.ts","core/CanvasManager.ts","shader/vertexConstants.ts","shader/fragmentConstants.ts","util/Render.ts","../node_modules/matrixgl/lib/vector_base.js","../node_modules/matrixgl/lib/float32vector.js","../node_modules/matrixgl/lib/quaternion.js","../node_modules/matrixgl/lib/matrix.js","../node_modules/matrixgl/lib/index.js","GLClasses/BaseObject.ts","objectGenerators/HSVA.ts","objectGenerators/Sphere.ts","en.data.ts","main.ts"],"names":["module","exports"],"mappings":"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","file":"main.5b6f981a.js","sourceRoot":"../src","sourcesContent":["module.exports=\"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform mat4 invMatrix;\\nuniform vec3 lightPosition;\\nuniform vec3 eyeDirection;\\nuniform vec4 ambientColor;\\nvarying vec3 vPosition;\\nvarying vec3 vNormal;\\nvarying vec4 vColor;\\n\\nuniform vec2 mouse;\\n\\nvoid main(void){\\n    vec3  lightVec  = lightPosition - vPosition;\\n    vec3  invLight  = normalize(invMatrix * vec4(lightVec, 0.0)).xyz;\\n    vec3  invEye    = normalize(invMatrix * vec4(eyeDirection, 10.0)).xyz;\\n    vec3  halfLE    = normalize(invLight + invEye);\\n    float diffuse   = clamp(dot(vNormal, invLight), mouse.y, 1.0) + 0.3;\\n    float specular  = pow(clamp(dot(vNormal, halfLE), 0.0 + mouse.x, 1.0), 10.0);\\n    vec4  destColor = vColor * vec4(vec3(diffuse), 1.0) + vec4(vec3(specular), 1.0) + ambientColor;\\n\\n    // gl_FragCOlorに対して出力すればいい\\n    gl_FragColor    = destColor;\\n}\";","module.exports=\"#define GLSLIFY 1\\nattribute vec3 position;\\nattribute vec3 normal;\\nattribute vec4 color;\\nuniform   mat4 mvpMatrix;\\nuniform   mat4 mMatrix;\\nvarying   vec3 vPosition;\\nvarying   vec3 vNormal;\\nvarying   vec4 vColor;\\n\\nvoid main(void){\\n    vPosition   = (mMatrix * vec4(position, 1.0)).xyz;\\n\\n    // vertexの時点は初期化なのでノーマライズと色をこの地点で決める\\n    vNormal     = normal;\\n    vColor      = color;\\n\\n    gl_Position = mvpMatrix * vec4(position, 1.0);\\n}\";","export default class Errors {\n  public static nullPointer(message: string) {\n    return new Error(`NULL POINTER EXCEPTION for : ${message}`);\n  }\n}\n","import {\n  Matrix4x4, Float32Vector3, Float32Vector2, Float32Vector4, Matrix3x3, Matrix2x2,\n} from 'matrixgl';\n// eslint-disable-next-line import/no-cycle\n\nexport enum BUFFER_TYPE {\n  VBO = 'vbo',\n  IBO = 'ibo',\n}\n\nexport enum SHADER_TYPE {\n  VERTEX = 'vertex',\n  FRAGMENT = 'fragment',\n}\n\nexport enum UNIFORM_TYPE {\n  VEC2 = 'VEC2',\n  VEC3 = 'VEC3',\n  VEC4 = 'VEC4',\n  MAT4 = 'MAT4',\n}\nexport interface IVBOSetting {\n  name: string;\n  data: number[];\n  size: number;\n}\n\nexport interface IRenderObjectSetting {\n  vbo: IVBOSetting[];\n  ibo: IIBOSetting;\n  uniLocations: IUniLocation[];\n}\n\nexport interface IIBOSetting {\n  name: string;\n  data: number[];\n}\n\nexport type TypeUniform =\n  | Matrix4x4\n  | Float32Vector2\n  | Float32Vector3\n  | Float32Vector4\n  | Matrix3x3\n  | Matrix2x2;\n\nexport interface IUniLocation {\n  name: string;\n  type: UNIFORM_TYPE;\n  location: TypeUniform;\n}\n\nexport interface ICacheShader {\n  id: string;\n  shader: WebGLShader;\n}\n\nexport interface ICacheBuffer {\n  id: string;\n  buffer: WebGLBuffer;\n}\n\nexport interface IAttribLocation {\n  id: string;\n  location: number;\n}\n\nexport interface IUniLocationList {\n  id: string;\n  uniLocation: WebGLUniformLocation;\n}\n\nexport default 'test';\n","/* eslint-disable no-undef */\n/* eslint-disable no-bitwise */\nimport Errors from '../util/Errors';\nimport {\n  BUFFER_TYPE,\n  SHADER_TYPE,\n  UNIFORM_TYPE,\n  ICacheShader,\n  ICacheBuffer,\n  IAttribLocation,\n  IUniLocationList,\n  IUniLocation,\n  IVBOSetting,\n  IIBOSetting,\n} from '../constants/interfaces';\nimport BaseObject from '../GLClasses/BaseObject';\n\nexport default class WebGLClass {\n  element: HTMLCanvasElement;\n\n  gl: WebGLRenderingContext;\n\n  glWidth: number;\n\n  glHeight: number;\n\n  program: WebGLProgram | null = null;\n\n  shaderList: ICacheShader[] = [];\n\n  bufferList: ICacheBuffer[] = [];\n\n  attrLocationList: IAttribLocation[] = [];\n\n  uniLocationList: IUniLocationList[] = [];\n\n  /**\n   * webglをコントロールするクラス\n   * @param width - width\n   * @param height - height\n   * @param id - canvas id\n   */\n  public constructor(width: number, height: number, id: string) {\n    const canvas = document.createElement('canvas');\n    this.glWidth = width;\n    this.glHeight = height;\n    canvas.setAttribute('width', String(width));\n    canvas.setAttribute('height', String(height));\n    canvas.setAttribute('id', id);\n    document.body.appendChild(canvas);\n    if (!(canvas instanceof HTMLCanvasElement)) {\n      throw new Error('canvas error');\n    }\n    this.element = canvas;\n    const webgl = this.element.getContext('webgl') || this.element.getContext('experimental-webgl');\n    if (webgl == null) {\n      throw new Error('webgl error');\n    }\n    this.gl = webgl;\n\n    // カリングの有効化\n    // this.gl.enable(this.gl.CULL_FACE);\n    // 深度テストの有効化\n    this.gl.enable(this.gl.DEPTH_TEST);\n    // this.gl.enable(this.gl.LEQUAL);\n  }\n\n  /* ライフサイクル */\n  /* マウンティングフェーズ */\n  public attribLocationPhase(vbo: IVBOSetting[]) {\n    for (let i = 0; i < vbo.length; i += 1) {\n      // attribの設定\n      if (this.program == null) {\n        throw Errors.nullPointer('program object');\n      }\n      const attribLocation = this.findAttribLocation(vbo[i].name);\n      if (attribLocation == null) {\n        const value = this.gl.getAttribLocation(this.program, vbo[i].name);\n        this.addAttrLocation(value, vbo[i].name);\n        console.log('attr', vbo[i].name);\n      }\n    }\n  }\n\n  public createBufferPhase(vbo: IVBOSetting[]) {\n    for (let i = 0; i < vbo.length; i += 1) {\n      // bufferの作成\n      const buffer = this.findBuffer(vbo[i].name);\n      if (buffer == null) {\n        this.addBuffer(this.createBuffer(vbo[i].data, BUFFER_TYPE.VBO), vbo[i].name);\n      }\n    }\n  }\n\n  public setAttributePhase(vbo: IVBOSetting[]) {\n    for (let i = 0; i < vbo.length; i += 1) {\n      const targetVBO = this.findBuffer(vbo[i].name);\n      const targetAttrib = this.findAttribLocation(vbo[i].name);\n      if (targetVBO == null || targetAttrib == null) {\n        throw Errors.nullPointer('vbo or attrib');\n      }\n      this.setAttribute(targetVBO, vbo[i].size, targetAttrib);\n    }\n  }\n\n  public bindIBO(ibo: IIBOSetting) {\n    const { name, data } = ibo;\n    const tmp = this.findBuffer(name);\n    if (tmp != null) {\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, tmp);\n      return;\n    }\n    const iboBuffer = this.createBuffer(data, BUFFER_TYPE.IBO);\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, iboBuffer);\n  }\n\n  public createUniformPhase(uniLocations: IUniLocation[]) {\n    if (this.program == null) {\n      throw Error('not found program');\n    }\n    for (let i = 0; i < uniLocations.length; i += 1) {\n      const { name } = uniLocations[i];\n\n      const tmp = this.findUniLocation(name);\n      if (tmp != null) return;\n\n      const uniLocation = this.gl.getUniformLocation(this.program, name);\n      if (uniLocation == null) throw Error(`unilocation notfound ${name}`);\n\n      this.addUniLocation(uniLocation, name);\n    }\n  }\n\n  public initialRendering(baseObj: BaseObject) {\n    this.gl.viewport(0, 0, this.glWidth, this.glHeight);\n    this.attribLocationPhase(baseObj.getVBOList());\n    this.createBufferPhase(baseObj.getVBOList());\n    this.setAttributePhase(baseObj.getVBOList());\n    this.createUniformPhase(baseObj.getAllUniLocation());\n    const uniLocationList = baseObj.getAllUniLocation();\n    for (let i = 0; i < uniLocationList.length; i += 1) {\n      this.initLocation(uniLocationList[i]);\n    }\n  }\n\n  public updateRendering(baseObj: BaseObject) {\n    this.setAttributePhase(baseObj.getVBOList());\n    const uniLocationList = baseObj.getAllUniLocation();\n    for (let i = 0; i < uniLocationList.length; i += 1) {\n      this.initLocation(uniLocationList[i]);\n    }\n    const ibo = baseObj.getIBO();\n    if (ibo == null) throw Error('ibo null pointer');\n    this.bindIBO(ibo);\n  }\n\n  public preRender() {\n    this.gl.clearColor(0.0, 0.0, 0.0, 1.0);\n    this.gl.clearDepth(1.0);\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n  }\n\n  /* レンダリングフェーズ */\n  public render(iboLength: number) {\n    this.drawObject(iboLength, 0, BUFFER_TYPE.IBO);\n  }\n  /* ライフサイクル */\n\n  public initLocation(locData: IUniLocation) {\n    const { type, location, name } = locData;\n    const loc = this.findUniLocation(name);\n    if (loc == null) throw Error('null');\n\n    if (type === UNIFORM_TYPE.MAT4) {\n      this.gl.uniformMatrix4fv(loc, false, location.values);\n      return;\n    }\n    if (type === UNIFORM_TYPE.VEC4) {\n      this.gl.uniform4fv(loc, location.values);\n      return;\n    }\n    if (type === UNIFORM_TYPE.VEC2) {\n      this.gl.uniform2fv(loc, location.values);\n    }\n    if (type === UNIFORM_TYPE.VEC3) {\n      this.gl.uniform3fv(loc, location.values);\n    }\n  }\n\n  public setAttribute(vbo: WebGLBuffer, size: number, location: number) {\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, vbo);\n    this.gl.enableVertexAttribArray(location);\n    this.gl.vertexAttribPointer(location, size, this.gl.FLOAT, false, 0, 0);\n  }\n\n  public drawObject(\n    dataLength: number,\n    size: number,\n    type: BUFFER_TYPE,\n  ) {\n    switch (type) {\n      case BUFFER_TYPE.VBO:\n        this.gl.drawArrays(this.gl.TRIANGLES, 0, dataLength / size);\n        break;\n      case BUFFER_TYPE.IBO:\n        this.gl.drawElements(this.gl.TRIANGLES, dataLength, this.gl.UNSIGNED_SHORT, 0);\n        break;\n      default:\n        throw Error('type of ???');\n    }\n  }\n\n  public flush() {\n    this.gl.flush();\n  }\n\n  public addShader(shader: WebGLShader, id: string) {\n    this.shaderList.push({\n      id,\n      shader,\n    });\n  }\n\n  public findShader(id: string): WebGLShader | null {\n    const content = this.shaderList.filter(item => item.id === id)[0];\n    if (content == null) {\n      return null;\n    }\n    return content.shader;\n  }\n\n  private addUniLocation(\n    uniLocation: WebGLUniformLocation,\n    id: string,\n  ) {\n    this.uniLocationList.push({\n      uniLocation,\n      id,\n    });\n  }\n\n  public findUniLocation(id: string): WebGLUniformLocation | null {\n    const content = this.uniLocationList.filter(item => item.id === id)[0];\n    if (content == null) {\n      return null;\n    }\n    return content.uniLocation;\n  }\n\n  private addBuffer(buffer: WebGLBuffer, id: string) {\n    this.bufferList.push({\n      buffer,\n      id,\n    });\n  }\n\n  public findBuffer(id: string): WebGLBuffer | null {\n    const content = this.bufferList.filter(item => item.id === id)[0];\n    if (content == null) {\n      return null;\n    }\n    return content.buffer;\n  }\n\n  private addAttrLocation(attr: number, id: string) {\n    this.attrLocationList.push({\n      location: attr,\n      id,\n    });\n  }\n\n  private findAttribLocation(id: string): number | null {\n    const content = this.attrLocationList.filter(item => item.id === id)[0];\n    if (content == null) {\n      return null;\n    }\n    return content.location;\n  }\n\n  // eslint-disable-next-line consistent-return\n  public createShader(vertexSource: string, id: string, type: SHADER_TYPE): WebGLShader {\n    let shader: WebGLShader | null = this.findShader(id);\n    if (shader != null) {\n      return shader;\n    }\n    switch (type) {\n      case 'vertex':\n        shader = this.gl.createShader(this.gl.VERTEX_SHADER);\n        break;\n      case 'fragment':\n        shader = this.gl.createShader(this.gl.FRAGMENT_SHADER);\n        break;\n      default:\n        shader = null;\n    }\n    if (shader == null) {\n      throw Errors.nullPointer('not found shader');\n    }\n    this.gl.shaderSource(shader, vertexSource);\n    this.gl.compileShader(shader);\n    if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n      throw this.gl.getShaderInfoLog(shader);\n    }\n    this.addShader(shader, id);\n    return shader;\n  }\n\n  /**\n     * プログラムオブジェクトの生成\n     * @param vs\n     * @param fs\n     */\n  public createProgram(vsID: string, fsID: string) {\n    const program = this.gl.createProgram();\n    if (program == null) {\n      throw Errors.nullPointer('create program method');\n    }\n    const vertex = this.findShader(vsID);\n    const fragment = this.findShader(fsID);\n    if (vertex == null || fragment == null) {\n      throw Errors.nullPointer('vertex fragment');\n    }\n    this.gl.attachShader(program, vertex);\n    this.gl.attachShader(program, fragment);\n    this.gl.linkProgram(program);\n    if (!this.gl.getProgramParameter(program, this.gl.LINK_STATUS)) {\n      throw this.gl.getProgramInfoLog(program);\n    }\n    this.gl.useProgram(program);\n    this.program = program;\n  }\n\n  public deleteProgram() {\n    if (this.program == null) {\n      return;\n    }\n    this.gl.deleteProgram(this.program);\n    this.program = null;\n  }\n\n  // TODO: WebGLに登録できるバッファは一つまで(らしい)\n  /**\n   * buffer\n   * @param data\n   */\n  public createBuffer(data: number[], type: BUFFER_TYPE) {\n    const buffer = this.gl.createBuffer();\n\n    if (buffer == null) {\n      throw Errors.nullPointer(type);\n    }\n    const target = type === BUFFER_TYPE.VBO\n      ? this.gl.ARRAY_BUFFER\n      : this.gl.ELEMENT_ARRAY_BUFFER;\n    const offset = type === BUFFER_TYPE.VBO\n      ? new Float32Array(data)\n      : new Int16Array(data);\n\n    this.gl.bindBuffer(target, buffer);\n    this.gl.bufferData(target, offset, this.gl.STATIC_DRAW);\n    this.gl.bindBuffer(target, null);\n    return buffer;\n  }\n}\n","import WebGLClass from './WebGLClass';\n\ninterface ICanvasClass {\n  id: string;\n  instance: WebGLClass;\n}\nexport default class CanvasManager {\n  static canvasInstanceList: ICanvasClass[] = [];\n\n  static createCanvas(width: number, height: number, id: string): WebGLClass {\n    const tmp = CanvasManager.getCanvas(id);\n    if (tmp != null) {\n      return tmp;\n    }\n    const instance = new WebGLClass(width, height, id);\n    CanvasManager.canvasInstanceList.push({\n      id,\n      instance,\n    });\n    return instance;\n  }\n\n  static getCanvas(id: string):WebGLClass | null {\n    // eslint-disable-next-line max-len\n    const instance = CanvasManager.canvasInstanceList.filter(canvasInstance => canvasInstance.id === id)[0];\n    if (instance == null) {\n      return null;\n    }\n\n    return instance.instance;\n  }\n}\n","export default {\n  ATTRIBUTES: {\n    POSITION: 'position',\n    POSITION_SIZE: 3,\n    NORMAL: 'normal',\n    NORMAL_SIZE: 3,\n    COLOR: 'color',\n    COLOR_SIZE: 4,\n  },\n  UNIFORMS: {\n    MVP_MATRIX: 'mvpMatrix',\n    M_MATRIX: 'mMatrix',\n  },\n} as const;\n","export default {\n  UNIFORMS: {\n    INV_MATRIX: 'invMatrix',\n    LIGHT_POSITION: 'lightPosition',\n    EYE_DIRECTION: 'eyeDirection',\n    AMBIENT_COLOR: 'ambientColor',\n    MOUSE: 'mouse',\n  },\n} as const;\n","/* eslint-disable no-bitwise */\nimport { Matrix4x4, Float32Vector2 } from 'matrixgl';\nimport CanvasManager from '../core/CanvasManager';\nimport { SHADER_TYPE } from '../constants/interfaces';\nimport BaseObject from '../GLClasses/BaseObject';\nimport vertexConstants from '../shader/vertexConstants';\nimport fragmentConstants from '../shader/fragmentConstants';\n\nconst vertexName = 'v1';\nconst fragmentName = 'f1';\n\nlet mouseX = 50;\nlet mouseY = 0;\n// eslint-disable-next-line no-undef\nconst { innerWidth, innerHeight } = window;\n// eslint-disable-next-line no-undef\ndocument.addEventListener('mousemove', (e: MouseEvent) => {\n  mouseX = (e.x / innerHeight + 0.1);\n  // mouseY = e.y / innerWidth;\n});\n\nlet attouch = 0;\nlet asdf = 1;\nsetInterval(() => {\n  asdf += 1;\n  attouch = Math.sin(asdf / 100);\n  mouseY = attouch * 0.5;\n},10)\n\n// const program = GlClass.createProgram(vertex, fragment);\n\nexport default (\n  settings: BaseObject[],\n  vertexSource: string,\n  fragmentSource: string,\n) => {\n  const GLClass = CanvasManager.createCanvas(600, 600, 'root');\n  GLClass.createShader(vertexSource, vertexName, SHADER_TYPE.VERTEX);\n  GLClass.createShader(fragmentSource, fragmentName, SHADER_TYPE.FRAGMENT);\n  GLClass.createProgram(vertexName, fragmentName);\n\n  const [Circle1] = settings;\n  GLClass.initialRendering(Circle1);\n\n  let i = 1;\n  const { MVP_MATRIX } = vertexConstants.UNIFORMS;\n  const main = () => {\n    i += 1;\n    GLClass.preRender();\n\n    const jLen = 3s;\n    for (let j = 0; j < jLen; j += 1) {\n      const f = Circle1.getUniLocation(MVP_MATRIX);\n      GLClass.updateRendering(Circle1);\n      const location = f.location as Matrix4x4;\n      GLClass.initLocation({\n        ...f,\n        location: location.rotateX(40).rotateY(-i / 50 + j / (jLen / 6.3)).translate(0, 0, -1.5),\n      });\n\n      const mouse = Circle1.getUniLocation(fragmentConstants.UNIFORMS.MOUSE);\n      const mouseLocation = mouse.location as Float32Vector2;\n      mouseLocation.x = mouseX;\n      mouseLocation.y = mouseY;\n      GLClass.initLocation({\n        ...mouse,\n        location: mouseLocation,\n      });\n\n      GLClass.render(Circle1.getIBODataLength());\n    }\n    GLClass.flush();\n\n    // eslint-disable-next-line no-undef\n    window.requestAnimationFrame(main);\n  };\n  main();\n};\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * An abstract class for vectors.\n */\nvar VectorBase = /** @class */ (function () {\n    function VectorBase() {\n    }\n    Object.defineProperty(VectorBase.prototype, \"values\", {\n        get: function () {\n            return this._values;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VectorBase.prototype, \"magnitude\", {\n        get: function () {\n            var sumSq = this._values.reduce(function (prev, current) { return prev + (Math.pow(current, 2)); }, 0);\n            return Math.sqrt(sumSq);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    VectorBase.prototype.toString = function () {\n        var dimension = this._values.length;\n        return \"Vector\" + dimension + \"(\" + this._values.join(', ') + \")\";\n    };\n    return VectorBase;\n}());\nexports.VectorBase = VectorBase;\n/**\n * A base abstract class for 2-dimensional vectors.\n */\nvar Vector2Base = /** @class */ (function (_super) {\n    __extends(Vector2Base, _super);\n    function Vector2Base() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Vector2Base.prototype, \"x\", {\n        /**\n         * Returns x value of the vector.\n         * @returns {number}\n         */\n        get: function () {\n            return this._values[0];\n        },\n        /**\n         * Set the `value` as new x.\n         * @param {number} value\n         */\n        set: function (value) {\n            this._values[0] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Vector2Base.prototype, \"y\", {\n        /**\n         * Returns y value of the vector.\n         * @returns {number}\n         */\n        get: function () {\n            return this._values[1];\n        },\n        /**\n         * Set the `value` as new y.\n         * @param {number} value\n         */\n        set: function (value) {\n            this._values[1] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Vector2Base;\n}(VectorBase));\nexports.Vector2Base = Vector2Base;\n/**\n * A base abstract class for 3-dimensional vectors.\n */\nvar Vector3Base = /** @class */ (function (_super) {\n    __extends(Vector3Base, _super);\n    function Vector3Base() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Vector3Base.prototype, \"x\", {\n        /**\n         * Returns x value of the vector.\n         * @returns {number}\n         */\n        get: function () {\n            return this._values[0];\n        },\n        /**\n         * Set the `value` as new x.\n         * @param {number} value\n         */\n        set: function (value) {\n            this._values[0] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Vector3Base.prototype, \"y\", {\n        /**\n         * Returns y value of the vector.\n         * @returns {number}\n         */\n        get: function () {\n            return this._values[1];\n        },\n        /**\n         * Set the `value` as new y.\n         * @param {number} value\n         */\n        set: function (value) {\n            this._values[1] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Vector3Base.prototype, \"z\", {\n        /**\n         * Returns z value of the vector.\n         * @returns {number}\n         */\n        get: function () {\n            return this._values[2];\n        },\n        /**\n         * Set the `value` as new z.\n         * @param {number} value\n         */\n        set: function (value) {\n            this._values[2] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Vector3Base;\n}(VectorBase));\nexports.Vector3Base = Vector3Base;\n/**\n * A base abstract class for 4-dimensional vectors.\n */\nvar Vector4Base = /** @class */ (function (_super) {\n    __extends(Vector4Base, _super);\n    function Vector4Base() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Vector4Base.prototype, \"x\", {\n        /**\n         * Returns x value of the vector.\n         * @returns {number}\n         */\n        get: function () {\n            return this._values[0];\n        },\n        /**\n         * Set the `value` as new x.\n         * @param {number} value\n         */\n        set: function (value) {\n            this._values[0] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Vector4Base.prototype, \"y\", {\n        /**\n         * Returns y value of the vector.\n         * @returns {number}\n         */\n        get: function () {\n            return this._values[1];\n        },\n        /**\n         * Set the `value` as new y.\n         * @param {number} value\n         */\n        set: function (value) {\n            this._values[1] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Vector4Base.prototype, \"z\", {\n        /**\n         * Returns z value of the vector.\n         * @returns {number}\n         */\n        get: function () {\n            return this._values[2];\n        },\n        /**\n         * Set the `value` as new z.\n         * @param {number} value\n         */\n        set: function (value) {\n            this._values[2] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Vector4Base.prototype, \"w\", {\n        /**\n         * Returns w value of the vector.\n         * @returns {number}\n         */\n        get: function () {\n            return this._values[3];\n        },\n        /**\n         * Set the `value` as new w.\n         * @param {number} value\n         */\n        set: function (value) {\n            this._values[3] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Vector4Base;\n}(VectorBase));\nexports.Vector4Base = Vector4Base;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vector_base_1 = require(\"./vector_base\");\n/**\n * A 2-dimensional vector of single-precision float numbers.\n */\nvar Float32Vector2 = /** @class */ (function (_super) {\n    __extends(Float32Vector2, _super);\n    function Float32Vector2(x, y) {\n        var _this = _super.call(this) || this;\n        _this._values = new Float32Array([x, y]);\n        return _this;\n    }\n    /**\n     * Add `other` to the vector and returns new `Float32Vector2`.\n     *\n     * This method does not mutate the vector.\n     * @param {Float32Vector2} other\n     * @returns {Float32Vector2}\n     */\n    Float32Vector2.prototype.add = function (other) {\n        return new Float32Vector2(this.x + other.x, this.y + other.y);\n    };\n    /**\n     * Subtract `other` from the vector and returns new `Float32Vector2`.\n     *\n     * This method does not mutate the vector.\n     * @param {Float32Vector2} other\n     * @returns {Float32Vector2}\n     */\n    Float32Vector2.prototype.sub = function (other) {\n        return new Float32Vector2(this.x - other.x, this.y - other.y);\n    };\n    /**\n     * Multiply the vector by `scalar` and returns new `Float32Vector2`.\n     *\n     * This method does not mutate the vector.\n     * @param {number} scalar\n     * @returns {Float32Vector2}\n     */\n    Float32Vector2.prototype.mulByScalar = function (scalar) {\n        return new Float32Vector2(this.x * scalar, this.y * scalar);\n    };\n    return Float32Vector2;\n}(vector_base_1.Vector2Base));\nexports.Float32Vector2 = Float32Vector2;\n/**\n * A 3-dimensional vector of single-precision float numbers.\n */\nvar Float32Vector3 = /** @class */ (function (_super) {\n    __extends(Float32Vector3, _super);\n    function Float32Vector3(x, y, z) {\n        var _this = _super.call(this) || this;\n        _this._values = new Float32Array([x, y, z]);\n        return _this;\n    }\n    /**\n     * Add `other` to the vector and returns new `Float32Vector3`.\n     *\n     * This method does not mutate the vector.\n     * @param {Float32Vector3} other\n     * @returns {Float32Vector3}\n     */\n    Float32Vector3.prototype.add = function (other) {\n        return new Float32Vector3(this.x + other.x, this.y + other.y, this.z + other.z);\n    };\n    /**\n     * Subtract `other` from the vector and returns new `Float32Vector3`.\n     *\n     * This method does not mutate the vector.\n     * @param {Float32Vector3} other\n     * @returns {Float32Vector3}\n     */\n    Float32Vector3.prototype.sub = function (other) {\n        return new Float32Vector3(this.x - other.x, this.y - other.y, this.z - other.z);\n    };\n    /**\n     * Multiply the vector by `scalar` and returns new `Float32Vector3`.\n     *\n     * This method does not mutate the vector.\n     * @param {number} scalar\n     * @returns {Float32Vector3}\n     */\n    Float32Vector3.prototype.mulByScalar = function (scalar) {\n        return new Float32Vector3(this.x * scalar, this.y * scalar, this.z * scalar);\n    };\n    /**\n     * Calculate dot product.\n     * @param {Float32Vector3} other\n     * @returns {number}\n     */\n    Float32Vector3.prototype.dot = function (other) {\n        return this.x * other.x + this.y * other.y + this.z * other.z;\n    };\n    /**\n     * Calculate cross product.\n     * @param {Float32Vector3} other\n     * @returns {Float32Vector3}\n     */\n    Float32Vector3.prototype.cross = function (other) {\n        var cx = this.y * other.z - this.z * other.y;\n        var cy = this.z * other.x - this.x * other.z;\n        var cz = this.x * other.y - this.y * other.x;\n        return new Float32Vector3(cx, cy, cz);\n    };\n    /**\n     * Normalize the vector and returns new `Float32Vector3`.\n     *\n     * This method does not mutate the vector.\n     * @returns {Float32Vector3}\n     */\n    Float32Vector3.prototype.normalize = function () {\n        var mag = this.magnitude;\n        if (mag === 0) {\n            return this;\n        }\n        return new Float32Vector3(this.x / mag, this.y / mag, this.z / mag);\n    };\n    Object.defineProperty(Float32Vector3.prototype, \"xy\", {\n        /**\n         * Returns xy values of the vector as `Float32Vector2`.\n         * @returns {Float32Vector2}\n         */\n        get: function () {\n            return new Float32Vector2(this.x, this.y);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Float32Vector3;\n}(vector_base_1.Vector3Base));\nexports.Float32Vector3 = Float32Vector3;\n/**\n * A 4-dimensional vector of single-precision float numbers.\n */\nvar Float32Vector4 = /** @class */ (function (_super) {\n    __extends(Float32Vector4, _super);\n    function Float32Vector4(x, y, z, w) {\n        var _this = _super.call(this) || this;\n        _this._values = new Float32Array([x, y, z, w]);\n        return _this;\n    }\n    /**\n     * Add `other` to the vector and returns new `Float32Vector4`.\n     *\n     * This method does not mutate the vector.\n     * @param {Float32Vector4} other\n     * @returns {Float32Vector4}\n     */\n    Float32Vector4.prototype.add = function (other) {\n        return new Float32Vector4(this.x + other.x, this.y + other.y, this.z + other.z, this.w + other.w);\n    };\n    /**\n     * Subtract `other` from the vector and returns new `Float32Vector4`.\n     *\n     * This method does not mutate the vector.\n     * @param {Float32Vector4} other\n     * @returns {Float32Vector4}\n     */\n    Float32Vector4.prototype.sub = function (other) {\n        return new Float32Vector4(this.x - other.x, this.y - other.y, this.z - other.z, this.w - other.w);\n    };\n    /**\n     * Multiply the vector by `scalar` and returns new `Float32Vector4`.\n     *\n     * This method does not mutate the vector.\n     * @param {number} scalar\n     * @returns {Float32Vector4}\n     */\n    Float32Vector4.prototype.mulByScalar = function (scalar) {\n        return new Float32Vector4(this.x * scalar, this.y * scalar, this.z * scalar, this.w * scalar);\n    };\n    Object.defineProperty(Float32Vector4.prototype, \"xyz\", {\n        /**\n         * Returns xyz values of the vector as `Float32Vector3`.\n         * @returns {Float32Vector3}\n         */\n        get: function () {\n            return new Float32Vector3(this.x, this.y, this.z);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Float32Vector4;\n}(vector_base_1.Vector4Base));\nexports.Float32Vector4 = Float32Vector4;\n/**\n * An alias for `Float32Vector2`.\n * @type {Float32Vector2}\n */\nexports.Vector2 = Float32Vector2;\n/**\n * An alias for `Float32Vector3`.\n * @type {Float32Vector3}\n */\nexports.Vector3 = Float32Vector3;\n/**\n * An alias for `Float32Vector4`.\n * @type {Float32Vector4}\n */\nexports.Vector4 = Float32Vector4;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar matrix_1 = require(\"./matrix\");\n/**\n * Quaternion which is 4-dimensional complex number.\n * See [Wikipedia](https://en.wikipedia.org/wiki/Quaternion).\n */\nvar Quaternion = /** @class */ (function () {\n    function Quaternion(x, y, z, w) {\n        this._values = new Float32Array([x, y, z, w]);\n    }\n    /**\n     * Create a rotation quaternion around `normalizedAxis`.\n     * `normalizedAxis` must be normalized.\n     * @param {Float32Vector3} normalizedAxis\n     * @param {number} radian\n     * @returns {Quaternion}\n     */\n    Quaternion.rotationAround = function (normalizedAxis, radian) {\n        var sin = Math.sin(radian / 2.0);\n        var cos = Math.cos(radian / 2.0);\n        return new Quaternion(normalizedAxis.x * sin, normalizedAxis.y * sin, normalizedAxis.z * sin, cos);\n    };\n    /**\n     * Returns a normalized quaternion.\n     * @returns {Quaternion}\n     */\n    Quaternion.prototype.normalize = function () {\n        var mag = this.magnitude;\n        if (mag === 0) {\n            return this;\n        }\n        var r = 1 / mag;\n        return new Quaternion(this.x * r, this.y * r, this.z * r, this.w * r);\n    };\n    /**\n     * Adds the `other` to the quaternion and returns the sum.\n     *\n     * This method does not mutate the quaternion.\n     * @param {Quaternion} other\n     * @returns {Quaternion}\n     */\n    Quaternion.prototype.add = function (other) {\n        return new Quaternion(this.x + other.x, this.y + other.y, this.z + other.z, this.w + other.w);\n    };\n    /**\n     * Multiplies the quaternion by `scalar` and returns the product.\n     *\n     * This method does not mutate the quaternion.\n     * @param {number} scalar\n     * @returns {Quaternion}\n     */\n    Quaternion.prototype.mulByScalar = function (scalar) {\n        return new Quaternion(this.x * scalar, this.y * scalar, this.z * scalar, this.w * scalar);\n    };\n    /**\n     * Calculates dot product.\n     * @param {Quaternion} other\n     * @returns {number}\n     */\n    Quaternion.prototype.dot = function (other) {\n        return this.x * other.x + this.y * other.y + this.z * other.z + this.w * other.w;\n    };\n    /**\n     * Calculates spherical linear interpolation(also known as Slerp) and returns new `Quaternion` between the quaternion and the other.\n     * @param {Quaternion} other\n     * @param {number} t 0.0 <= t <= 1.0\n     * @param {{chooseShorterAngle: boolean}} options Does not work currently. slerp chooses shorter angle regardless of this value.\n     * @returns {Quaternion}\n     */\n    Quaternion.prototype.slerp = function (other, t, options) {\n        if (options === void 0) { options = { chooseShorterAngle: true }; }\n        var dotProd = this.dot(other);\n        var otherQuaternion = other;\n        // When the dot product is negative, slerp chooses the longer way.\n        // So we should negate the `other` quaternion.\n        if (dotProd < 0) {\n            dotProd = -dotProd;\n            otherQuaternion = other.mulByScalar(-1);\n        }\n        var omega = Math.acos(dotProd);\n        var sinOmega = Math.sin(omega);\n        var q1 = this.mulByScalar(Math.sin((1 - t) * omega) / sinOmega);\n        var q2 = otherQuaternion.mulByScalar(Math.sin(t * omega) / sinOmega);\n        return q1.add(q2);\n    };\n    Object.defineProperty(Quaternion.prototype, \"magnitude\", {\n        /**\n         * Calc magnitude of the quaternion.\n         * @returns {number}\n         */\n        get: function () {\n            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Quaternion.prototype, \"norm\", {\n        /**\n         * Calc norm of the quaternion.\n         * An alias for `magnitude`.\n         * @returns {number}\n         */\n        get: function () {\n            return this.magnitude;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Quaternion.prototype, \"x\", {\n        /**\n         * Returns x value of the vector.\n         * @returns {number}\n         */\n        get: function () {\n            return this._values[0];\n        },\n        /**\n         * Set the `value` as new x.\n         * @param {number} value\n         */\n        set: function (value) {\n            this._values[0] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Quaternion.prototype, \"y\", {\n        /**\n         * Returns y value of the vector.\n         * @returns {number}\n         */\n        get: function () {\n            return this._values[1];\n        },\n        /**\n         * Set the `value` as new y.\n         * @param {number} value\n         */\n        set: function (value) {\n            this._values[1] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Quaternion.prototype, \"z\", {\n        /**\n         * Returns z value of the vector.\n         * @returns {number}\n         */\n        get: function () {\n            return this._values[2];\n        },\n        /**\n         * Set the `value` as new z.\n         * @param {number} value\n         */\n        set: function (value) {\n            this._values[2] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Quaternion.prototype, \"w\", {\n        /**\n         * Returns w value of the vector.\n         * @returns {number}\n         */\n        get: function () {\n            return this._values[3];\n        },\n        /**\n         * Set the `value` as new w.\n         * @param {number} value\n         */\n        set: function (value) {\n            this._values[3] = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Quaternion.prototype, \"values\", {\n        /**\n         * Returns values of the quaternion.\n         * @returns {Float32Array}\n         */\n        get: function () {\n            return this._values;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Convert the quaternion to a rotation matrix.\n     * @returns {Matrix4x4}\n     */\n    Quaternion.prototype.toRotationMatrix4 = function () {\n        var x = this.x;\n        var y = this.y;\n        var z = this.z;\n        var w = this.w;\n        var m11 = 1 - 2 * y * y - 2 * z * z;\n        var m12 = 2 * x * y - 2 * w * z;\n        var m13 = 2 * x * z + 2 * w * y;\n        var m14 = 0;\n        var m21 = 2 * x * y + 2 * w * z;\n        var m22 = 1 - 2 * x * x - 2 * z * z;\n        var m23 = 2 * y * z - 2 * w * x;\n        var m24 = 0;\n        var m31 = 2 * x * z - 2 * w * y;\n        var m32 = 2 * y * z + 2 * w * x;\n        var m33 = 1 - 2 * x * x - 2 * y * y;\n        var m34 = 0;\n        var m41 = 0;\n        var m42 = 0;\n        var m43 = 0;\n        var m44 = 1;\n        return new matrix_1.Matrix4x4(m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33, m43, m14, m24, m34, m44);\n    };\n    /**\n     * Returns values as `String`.\n     * @returns {string}\n     */\n    Quaternion.prototype.toString = function () {\n        return \"Quaternion(\" + this.x + \", \" + this.y + \", \" + this.z + \", \" + this.w + \")\";\n    };\n    return Quaternion;\n}());\nexports.Quaternion = Quaternion;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar quaternion_1 = require(\"./quaternion\");\n/**\n * 2x2 Matrix of single-precision float numbers.\n *\n * Values are stored in column major order.\n */\nvar Matrix2x2 = /** @class */ (function () {\n    function Matrix2x2(m11, m21, m12, m22) {\n        this._values = new Float32Array([\n            m11, m21,\n            m12, m22\n        ]);\n    }\n    /**\n     * Returns an identity matrix.\n     * @returns {Matrix2x2}\n     */\n    Matrix2x2.identity = function () {\n        return new Matrix2x2(1.0, 0.0, 0.0, 1.0);\n    };\n    Object.defineProperty(Matrix2x2.prototype, \"values\", {\n        get: function () {\n            return this._values;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Matrix2x2.prototype.toString = function () {\n        return this._values.toString();\n    };\n    return Matrix2x2;\n}());\nexports.Matrix2x2 = Matrix2x2;\n/**\n * 3x3 Matrix of single-precision float numbers.\n *\n * Values are stored in column major order.\n */\nvar Matrix3x3 = /** @class */ (function () {\n    function Matrix3x3(m11, m21, m31, m12, m22, m32, m13, m23, m33) {\n        this._values = new Float32Array([\n            m11, m21, m31,\n            m12, m22, m32,\n            m13, m23, m33\n        ]);\n    }\n    /**\n     * Returns an identity matrix.\n     * @returns {Matrix3x3}\n     */\n    Matrix3x3.identity = function () {\n        return new Matrix3x3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0);\n    };\n    Object.defineProperty(Matrix3x3.prototype, \"values\", {\n        get: function () {\n            return this._values;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Matrix3x3.prototype.toString = function () {\n        return this._values.toString();\n    };\n    return Matrix3x3;\n}());\nexports.Matrix3x3 = Matrix3x3;\n/**\n * 4x4 Matrix of single-precision float numbers.\n *\n * Values are stored in column major order.\n */\nvar Matrix4x4 = /** @class */ (function () {\n    function Matrix4x4(m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33, m43, m14, m24, m34, m44) {\n        this._values = new Float32Array([\n            m11, m21, m31, m41,\n            m12, m22, m32, m42,\n            m13, m23, m33, m43,\n            m14, m24, m34, m44\n        ]);\n    }\n    /**\n     * Returns an identity matrix.\n     * @returns {Matrix4x4}\n     */\n    Matrix4x4.identity = function () {\n        return new Matrix4x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0);\n    };\n    /**\n     * Returns translation matrix.\n     * @param {number} tx\n     * @param {number} ty\n     * @param {number} tz\n     * @returns {Matrix4x4}\n     */\n    Matrix4x4.translation = function (tx, ty, tz) {\n        return new Matrix4x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, tx, ty, tz, 1.0);\n    };\n    /**\n     * Returns scaling matrix.\n     * @param {number} sx\n     * @param {number} sy\n     * @param {number} sz\n     * @returns {Matrix4x4}\n     */\n    Matrix4x4.scaling = function (sx, sy, sz) {\n        return new Matrix4x4(sx, 0.0, 0.0, 0.0, 0.0, sy, 0.0, 0.0, 0.0, 0.0, sz, 0.0, 0.0, 0.0, 0.0, 1.0);\n    };\n    /**\n     * Returns rotation matrix around x-axis.\n     * @param {number} radian\n     * @returns {Matrix4x4}\n     */\n    Matrix4x4.rotationX = function (radian) {\n        var sin = Math.sin(radian);\n        var cos = Math.cos(radian);\n        return new Matrix4x4(1.0, 0.0, 0.0, 0.0, 0.0, cos, sin, 0.0, 0.0, -sin, cos, 0.0, 0.0, 0.0, 0.0, 1.0);\n    };\n    /**\n     * Returns rotation matrix around y-axis.\n     * @param {number} radian\n     * @returns {Matrix4x4}\n     */\n    Matrix4x4.rotationY = function (radian) {\n        var sin = Math.sin(radian);\n        var cos = Math.cos(radian);\n        return new Matrix4x4(cos, 0.0, -sin, 0.0, 0.0, 1.0, 0.0, 0.0, sin, 0.0, cos, 0.0, 0.0, 0.0, 0.0, 1.0);\n    };\n    /**\n     * Returns rotation matrix around z-axis.\n     * @param {number} radian\n     * @returns {Matrix4x4}\n     */\n    Matrix4x4.rotationZ = function (radian) {\n        var sin = Math.sin(radian);\n        var cos = Math.cos(radian);\n        return new Matrix4x4(cos, sin, 0.0, 0.0, -sin, cos, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0);\n    };\n    /**\n     * Returns rotation matrix around `normalizedAxis`. `normalizedAxis` must be normalized.\n     * @param {Float32Vector3} normalizedAxis\n     * @param {number} radian\n     * @returns {Matrix4x4}\n     */\n    Matrix4x4.rotationAround = function (normalizedAxis, radian) {\n        var q = quaternion_1.Quaternion.rotationAround(normalizedAxis, radian);\n        return q.toRotationMatrix4();\n    };\n    /**\n     * Returns \"look at\" matrix.\n     * @param {Float32Vector3} cameraPosition\n     * @param {Float32Vector3} lookAtPosition\n     * @param {Float32Vector3} cameraUp\n     * @returns {Matrix4x4}\n     */\n    Matrix4x4.lookAt = function (cameraPosition, lookAtPosition, cameraUp) {\n        var zAxis = cameraPosition.sub(lookAtPosition).normalize();\n        var xAxis = cameraUp.cross(zAxis).normalize();\n        var yAxis = zAxis.cross(xAxis).normalize();\n        return new Matrix4x4(xAxis.x, yAxis.x, zAxis.x, 0.0, xAxis.y, yAxis.y, zAxis.y, 0.0, xAxis.z, yAxis.z, zAxis.z, 0.0, -cameraPosition.dot(xAxis), -cameraPosition.dot(yAxis), -cameraPosition.dot(zAxis), 1.0);\n    };\n    /**\n     * Returns an orthographic projection matrix.\n     * @param {{top: number; bottom: number; left: number; right: number; near: number; far: number}} argsObject\n     * @returns {Matrix4x4}\n     */\n    Matrix4x4.orthographic = function (argsObject) {\n        var top = argsObject.top;\n        var bottom = argsObject.bottom;\n        var left = argsObject.left;\n        var right = argsObject.right;\n        var near = argsObject.near;\n        var far = argsObject.far;\n        return new Matrix4x4(2 / (right - left), 0.0, 0.0, 0.0, 0.0, 2 / (top - bottom), 0.0, 0.0, 0.0, 0.0, -2 / (far - near), 0.0, -(right + left) / (right - left), -(top + bottom) / (top - bottom), -(far + near) / (far - near), 1.0);\n    };\n    /**\n     * Returns a frustrum projection matrix.\n     * @param {{top: number; bottom: number; left: number; right: number; near: number; far: number}} argsObject\n     * @returns {Matrix4x4}\n     */\n    Matrix4x4.frustum = function (argsObject) {\n        var top = argsObject.top;\n        var bottom = argsObject.bottom;\n        var left = argsObject.left;\n        var right = argsObject.right;\n        var near = argsObject.near;\n        var far = argsObject.far;\n        return new Matrix4x4(2 * near / (right - left), 0.0, 0.0, 0.0, 0.0, 2 * near / (top - bottom), 0.0, 0.0, (right + left) / (right - left), (top + bottom) / (top - bottom), -(far + near) / (far - near), -1.0, 0.0, 0.0, -2 * far * near / (far - near), 0.0);\n    };\n    /**\n     * Returns a perspective projection matrix.\n     * @param {{fovY: number; aspect: number; near: number; far: number}} argsObject\n     * @returns {Matrix4x4}\n     */\n    Matrix4x4.perspective = function (argsObject) {\n        var top = argsObject.near * Math.tan(argsObject.fovYRadian * 0.5);\n        var height = top * 2;\n        var width = argsObject.aspectRatio * height;\n        var left = -0.5 * width;\n        var right = left + width;\n        var bottom = top - height;\n        return Matrix4x4.frustum({\n            top: top,\n            bottom: bottom,\n            left: left,\n            right: right,\n            near: argsObject.near,\n            far: argsObject.far\n        });\n    };\n    /**\n     * Multiply by `other` matrix and returns a product.\n     *\n     * This method does not mutate the matrix.\n     * @param {Matrix4x4} other\n     * @returns {Matrix4x4}\n     */\n    Matrix4x4.prototype.mulByMatrix4x4 = function (other) {\n        var m11 = this._values[0];\n        var m12 = this._values[4];\n        var m13 = this._values[8];\n        var m14 = this._values[12];\n        var m21 = this._values[1];\n        var m22 = this._values[5];\n        var m23 = this._values[9];\n        var m24 = this._values[13];\n        var m31 = this._values[2];\n        var m32 = this._values[6];\n        var m33 = this._values[10];\n        var m34 = this._values[14];\n        var m41 = this._values[3];\n        var m42 = this._values[7];\n        var m43 = this._values[11];\n        var m44 = this._values[15];\n        var o11 = other.values[0];\n        var o12 = other.values[4];\n        var o13 = other.values[8];\n        var o14 = other.values[12];\n        var o21 = other.values[1];\n        var o22 = other.values[5];\n        var o23 = other.values[9];\n        var o24 = other.values[13];\n        var o31 = other.values[2];\n        var o32 = other.values[6];\n        var o33 = other.values[10];\n        var o34 = other.values[14];\n        var o41 = other.values[3];\n        var o42 = other.values[7];\n        var o43 = other.values[11];\n        var o44 = other.values[15];\n        var p11 = (m11 * o11) + (m12 * o21) + (m13 * o31) + (m14 * o41);\n        var p12 = (m11 * o12) + (m12 * o22) + (m13 * o32) + (m14 * o42);\n        var p13 = (m11 * o13) + (m12 * o23) + (m13 * o33) + (m14 * o43);\n        var p14 = (m11 * o14) + (m12 * o24) + (m13 * o34) + (m14 * o44);\n        var p21 = (m21 * o11) + (m22 * o21) + (m23 * o31) + (m24 * o41);\n        var p22 = (m21 * o12) + (m22 * o22) + (m23 * o32) + (m24 * o42);\n        var p23 = (m21 * o13) + (m22 * o23) + (m23 * o33) + (m24 * o43);\n        var p24 = (m21 * o14) + (m22 * o24) + (m23 * o34) + (m24 * o44);\n        var p31 = (m31 * o11) + (m32 * o21) + (m33 * o31) + (m34 * o41);\n        var p32 = (m31 * o12) + (m32 * o22) + (m33 * o32) + (m34 * o42);\n        var p33 = (m31 * o13) + (m32 * o23) + (m33 * o33) + (m34 * o43);\n        var p34 = (m31 * o14) + (m32 * o24) + (m33 * o34) + (m34 * o44);\n        var p41 = (m41 * o11) + (m42 * o21) + (m43 * o31) + (m44 * o41);\n        var p42 = (m41 * o12) + (m42 * o22) + (m43 * o32) + (m44 * o42);\n        var p43 = (m41 * o13) + (m42 * o23) + (m43 * o33) + (m44 * o43);\n        var p44 = (m41 * o14) + (m42 * o24) + (m43 * o34) + (m44 * o44);\n        return new Matrix4x4(p11, p21, p31, p41, p12, p22, p32, p42, p13, p23, p33, p43, p14, p24, p34, p44);\n    };\n    /**\n     * An alias for `mulByMatrix4x4`.\n     * @param {Matrix4x4} other\n     * @returns {Matrix4x4}\n     */\n    Matrix4x4.prototype.mulByMatrix4 = function (other) {\n        return this.mulByMatrix4x4(other);\n    };\n    /**\n     * Translate the matrix and returns new `Matrix4x4`.\n     *\n     * This method does not mutate the matrix.\n     * @param {number} tx\n     * @param {number} ty\n     * @param {number} tz\n     * @returns {Matrix4x4}\n     */\n    Matrix4x4.prototype.translate = function (tx, ty, tz) {\n        var t = Matrix4x4.translation(tx, ty, tz);\n        return this.mulByMatrix4x4(t);\n    };\n    /**\n     * Scale the matrix and returns new `Matrix4x4`.\n     * @param {number} sx\n     * @param {number} sy\n     * @param {number} sz\n     * @returns {Matrix4x4}\n     */\n    Matrix4x4.prototype.scale = function (sx, sy, sz) {\n        var s = Matrix4x4.scaling(sx, sy, sz);\n        return this.mulByMatrix4x4(s);\n    };\n    /**\n     * Rotate the matrix around x-axis and returns new `Matrix4x4`.\n     *\n     * This method does not mutate the matrix.\n     * @param {number} radian\n     * @returns {Matrix4x4}\n     */\n    Matrix4x4.prototype.rotateX = function (radian) {\n        var rx = Matrix4x4.rotationX(radian);\n        return this.mulByMatrix4x4(rx);\n    };\n    /**\n     * Rotate the matrix around y-axis and returns new `Matrix4x4`.\n     *\n     * This method does not mutate the matrix.\n     * @param {number} radian\n     * @returns {Matrix4x4}\n     */\n    Matrix4x4.prototype.rotateY = function (radian) {\n        var ry = Matrix4x4.rotationY(radian);\n        return this.mulByMatrix4x4(ry);\n    };\n    /**\n     * Rotate the matrix around z-axis and returns new `Matrix4x4`.\n     *\n     * This method does not mutate the matrix.\n     * @param {number} radian\n     * @returns {Matrix4x4}\n     */\n    Matrix4x4.prototype.rotateZ = function (radian) {\n        var rz = Matrix4x4.rotationZ(radian);\n        return this.mulByMatrix4x4(rz);\n    };\n    /**\n     * Rotate the matrix around the `normalizedAxis` and return new Matrix4x4.\n     *\n     * This method does not mutate the matrix.\n     * @param {Float32Vector3} normalizedAxis\n     * @param {number} radian\n     * @returns {Matrix4x4}\n     */\n    Matrix4x4.prototype.rotateAround = function (normalizedAxis, radian) {\n        var r = Matrix4x4.rotationAround(normalizedAxis, radian);\n        return this.mulByMatrix4x4(r);\n    };\n    Object.defineProperty(Matrix4x4.prototype, \"values\", {\n        get: function () {\n            return this._values;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Matrix4x4.prototype.toString = function () {\n        return this._values.toString();\n    };\n    return Matrix4x4;\n}());\nexports.Matrix4x4 = Matrix4x4;\n/**\n * An alias for `Matrix2x2`.\n * @type {Matrix2x2}\n */\nexports.Matrix2 = Matrix2x2;\n/**\n * An alias for `Matrix3x3`.\n * @type {Matrix3x3}\n */\nexports.Matrix3 = Matrix3x3;\n/**\n * An alias for `Matrix4x4`.\n * @type {Matrix4x4}\n */\nexports.Matrix4 = Matrix4x4;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./float32vector\"));\n__export(require(\"./matrix\"));\n__export(require(\"./quaternion\"));\n","import { IVBOSetting, IIBOSetting, IUniLocation } from '../constants/interfaces';\n\nexport default class BaseObject {\n  private vbo: IVBOSetting[] = [];\n\n  private ibo?: IIBOSetting;\n\n  private uniLocaiton: IUniLocation[] = [];\n\n  private locationIndexMap:{ [key: string]: number; } = {};\n\n  private iboDataLength = 0;\n\n  public name: string;\n\n  constructor(name: string) {\n    this.name = name;\n  }\n\n  addVBO(vbo: IVBOSetting) {\n    this.vbo.push(vbo);\n  }\n\n  setIBO(ibo: number[]) {\n    this.ibo = {\n      name: this.name,\n      data: ibo,\n    };\n    this.iboDataLength = ibo.length;\n  }\n\n  getVBOList() {\n    return this.vbo;\n  }\n\n  getIBODataLength() {\n    return this.iboDataLength;\n  }\n\n  getIBO() {\n    return this.ibo;\n  }\n\n  /**\n   * @param location\n   * @returns - uni locationのIndex\n   */\n  addUniLocation(location: IUniLocation) {\n    this.uniLocaiton.push(location);\n    this.locationIndexMap[location.name] = this.uniLocaiton.length - 1;\n  }\n\n  getAllUniLocation(): IUniLocation[] {\n    return this.uniLocaiton;\n  }\n\n  getUniLocation(name: string): IUniLocation {\n    const location = this.uniLocaiton[this.locationIndexMap[name]];\n    if (location == null) throw Error('notfound uni location');\n    return location;\n  }\n}\n","export default (h: number, s: number, v: number, a: number): number[] | null => {\n  if (s > 1 || v > 1 || a > 1) return null;\n  const th = h % 360;\n  const i = Math.floor(th / 60);\n  const f = th / 60 - i;\n  const m = v * (1 - s);\n  const n = v * (1 - s * f);\n  const k = v * (1 - s * (1 - f));\n  const color = [];\n\n  const r = [v, n, m, m, k, v];\n  const g = [k, v, v, n, m, m];\n  const b = [m, m, k, v, v, n];\n  color.push(r[i], g[i], b[i], a);\n  return color;\n};\n","import HSVA from './HSVA';\n\nexport default (\n  row: number,\n  column: number,\n  rad: number,\n) => {\n  const position: number[] = [];\n  const normal: number[] = [];\n  const color: number[] = [];\n  const index: number[] = [];\n\n  for (let i = 0; i <= row; i += 1) {\n    const r = Math.PI / row * i;\n    const ry = Math.cos(r);\n    const rr = Math.sin(r);\n    for (let j = 0; j <= column; j += 1) {\n      const tr = Math.PI * 2 / column * j;\n      const tx = rr * rad * Math.cos(tr);\n      const ty = ry * rad;\n      const tz = rr * rad * Math.sin(tr);\n      const rx = rr * Math.cos(tr);\n      const rz = rr * Math.sin(tr);\n\n      const tc = HSVA(360 / row * i, 1, 1, 1);\n\n      position.push(tx, ty, tz);\n      normal.push(rx, ry, rz);\n      if (tc == null) throw Error('color is notfound');\n      color.push(tc[0], tc[1], tc[2], tc[3]);\n    }\n  }\n\n  let r = 0;\n  for (let i = 0; i < row; i += 1) {\n    for (let j = 0; j < column; j += 1) {\n      r = (column + 1) * i + j;\n      index.push(r, r + 1, r + column + 2);\n      index.push(r, r + column + 2, r + column + 1);\n    }\n  }\n\n  return {\n    position,\n    normal,\n    color,\n    index,\n  };\n};\n","import {\n  Matrix4x4, Float32Vector4, Float32Vector3, Float32Vector2,\n} from 'matrixgl';\nimport { UNIFORM_TYPE } from './constants/interfaces';\n\nimport BaseObject from './GLClasses/BaseObject';\nimport fragmentConstants from './shader/fragmentConstants';\nimport vertexConstants from './shader/vertexConstants';\nimport Sphere from './objectGenerators/Sphere';\n\nconst enCreator = (name: string, row: number, col: number, rad: number) => {\n  const circle = Sphere(row, col, rad);\n\n  const circleObject = new BaseObject(name);\n\n  const { ATTRIBUTES } = vertexConstants;\n  circleObject.addVBO({\n    data: circle.position,\n    name: ATTRIBUTES.POSITION,\n    size: ATTRIBUTES.POSITION_SIZE,\n  });\n\n  circleObject.addVBO({\n    data: circle.color,\n    name: ATTRIBUTES.COLOR,\n    size: ATTRIBUTES.COLOR_SIZE,\n  });\n\n  circleObject.addVBO({\n    data: circle.normal,\n    name: ATTRIBUTES.NORMAL,\n    size: ATTRIBUTES.NORMAL_SIZE,\n  });\n\n  circleObject.setIBO(circle.index);\n\n  const { UNIFORMS: V_UNIFORMS } = vertexConstants;\n  const { UNIFORMS: F_UNIFORMS } = fragmentConstants;\n\n  circleObject.addUniLocation({\n    name: V_UNIFORMS.MVP_MATRIX,\n    type: UNIFORM_TYPE.MAT4,\n    location: new Matrix4x4(\n      1, 0, 0, 0,\n      0, 1, 0, 0,\n      0, 0, 1, 0,\n      0, 0, 0, 5,\n    ),\n  });\n\n  circleObject.addUniLocation({\n    name: V_UNIFORMS.M_MATRIX,\n    type: UNIFORM_TYPE.MAT4,\n    location: new Matrix4x4(\n      1, 0, 0, 0,\n      0, 1, 0, 0,\n      0, 0, 1, 0,\n      0, 3, 0, 5,\n    ),\n  });\n\n  circleObject.addUniLocation({\n    name: F_UNIFORMS.LIGHT_POSITION,\n    type: UNIFORM_TYPE.VEC3,\n    location: new Float32Vector3(10, 10, 10),\n  });\n\n\n  circleObject.addUniLocation({\n    name: F_UNIFORMS.INV_MATRIX,\n    type: UNIFORM_TYPE.MAT4,\n    location: new Matrix4x4(\n      1, 0, 0, 0,\n      0, 10, 0, 0,\n      0, 0, 10, 0,\n      0, 0, 0, 50,\n    ),\n  });\n\n  circleObject.addUniLocation({\n    name: F_UNIFORMS.AMBIENT_COLOR,\n    type: UNIFORM_TYPE.VEC4,\n    location: new Float32Vector4(0.1, 0.1, 0.1, 1.0),\n  });\n\n  circleObject.addUniLocation({\n    name: F_UNIFORMS.EYE_DIRECTION,\n    type: UNIFORM_TYPE.VEC3,\n    location: new Float32Vector3(0.0, 0.0, 20.0),\n  });\n\n  circleObject.addUniLocation({\n    name: F_UNIFORMS.MOUSE,\n    type: UNIFORM_TYPE.VEC2,\n    location: new Float32Vector2(0, 0),\n  });\n  return circleObject;\n};\n\nexport default enCreator;\n","import fragmentSource from './shader/fragment.glsl';\nimport vertexSource from './shader/vertex.glsl';\nimport Render from './util/Render';\nimport circleObject from './obj.data';\nimport enObject from './en.data';\n\nRender([\n  enObject('circle2', 50, 50, 2.0),\n  // circleObject('circle1', 20, 20, 0.4, 0.8),\n], vertexSource, fragmentSource);\n"]}